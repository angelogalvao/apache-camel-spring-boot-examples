#Spring Applciatio Name
spring.application.name=ibmmq-client-example

# the name of Camel
camel.springboot.name = Artemis Camel on Spring Boot Client Example

# IBM MQ Configuration

ibm.mq.queueManager=QUICKSTART
ibm.mq.channel=DEV.APP.SVRCONN
ibm.mq.connName=${QM_DEV_IBM_MQ_SERVICE_HOST:localhost}(${QM_DEV_IBM_MQ_SERVICE_PORT_QMGR:1414})
ibm.mq.user=${MQ_USER:app}
ibm.mq.password=${MQ_PASSWORD:passw0rd}

ibm.mq.pool.enabled=true

test.queue=DEV.QUEUE.1

# JMS component 

camel.component.jms.allow-auto-wired-connection-factory=false

# Openshift Configuration
dekorate.openshift.replicas=2
dekorate.s2i.builder-image=registry.access.redhat.com/ubi9/openjdk-17:latest

# what to say
greeting = This is a Camel on Spring Boot integrating with IBM MQ example message

# how often to trigger the timer
timer.period = 2000

# to automatic shutdown the JVM after a period of time
#camel.springboot.duration-max-seconds=60
#camel.springboot.duration-max-messages=100

# add for example: &repeatCount=5 to the timer endpoint to make Camel idle
#camel.springboot.duration-max-idle-seconds=15

# expose actuator endpoint via HTTP
management.endpoints.web.exposure.include=info,health,camelroutes

# turn on actuator health check
management.endpoint.health.enabled = true

# allow to obtain basic information about camel routes (read only mode)
management.endpoint.camelroutes.enabled = true
management.endpoint.camelroutes.read-only = true

# to configure logging levels
#logging.level.org.springframework = INFO
#logging.level.org.apache.camel.spring.boot = INFO
#logging.level.org.apache.camel.impl = DEBUG
#logging.level.sample.camel = DEBUG
